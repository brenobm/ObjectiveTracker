@page "/objectives"
@using ObjectivesTracker.Models
@inject HttpClient Http
@inject IJSRuntime JSRuntime

<h3>Objectives List</h3>

@if (objectives == null)
{
    <p>Loading objectives...</p>
}
else if (!objectives.Any())
{
    <p>No objectives found.</p>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Name</th>
                <th>Description</th>
                <th>Frequency</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var objective in objectives)
            {
                <tr>
                    <td>@objective.Name</td>
                    <td>@objective.Description</td>
                    <td>
                        @objective.Frequency.Type.ToString()
                        @if (objective.Frequency.Type == FrequencyType.Weekly || objective.Frequency.Type == FrequencyType.Monthly)
                        {
                            <span> (Days: @string.Join(", ", objective.Frequency.Days))</span>
                        }
                    </td>
                    <td>
                        <NavLink class="btn btn-primary btn-sm me-2" href="@($"objectives/{objective.Id}")">Details</NavLink>
                        <NavLink class="btn btn-secondary btn-sm me-2" href="@($"objectives/edit/{objective.Id}")">Edit</NavLink>
                        <button class="btn btn-danger btn-sm" @onclick="() => DeleteObjective(objective)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Objective> objectives;

    protected override async Task OnInitializedAsync()
    {
        objectives = await Http.GetFromJsonAsync<List<Objective>>("api/objectives");
    }

    private async Task DeleteObjective(Objective objectiveToDelete)
    {
        var confirmed = await JSRuntime.InvokeAsync<bool>("confirm", new object[] { "Are you sure you want to delete this objective?" });

        if (confirmed)
        {
            await Http.DeleteAsync($"api/objectives/{objectiveToDelete.Id}");
            objectives?.Remove(objectiveToDelete); // Update the list after deletion
            StateHasChanged(); // Re-render the component
        }
    }
}